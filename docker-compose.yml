version: '3.8'

networks:
  payment:
    name: payment-rinha
    driver: bridge
  payment-processor:
    external: true

services:
  payment-proxy:
    image: nginx
    container_name: payment-proxy
    ports:
      - 9999:9999
    networks:
      - payment
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - payment-api
      - payment-api2
#      payment-api:
#        condition: service_started
#      payment-api2:
#        condition: service_started
    deploy:
      resources:
        limits:
          cpus: 0.1
          memory: 10MB

  payment-messaging:
    image: nats:latest
    container_name: payment-messaging
#    command: "-m 8222"
    ports:
      - 4222:4222
#      - 8222:8222
    networks:
      - payment
    deploy:
      resources:
        limits:
          cpus: 0.15
          memory: 10MB

  payment-database:
    image: postgres:17-alpine
    container_name: payment-database
    environment:
      - POSTGRES_DB=payments
      - POSTGRES_USER=payments
      - POSTGRES_PASSWORD=paymentspass
    ports:
      - 5432:5432
    networks:
      - payment
    volumes:
      - ./docker/init-db:/docker-entrypoint-initdb.d
    command: >
      postgres
        -c shared_buffers=16MB
        -c work_mem=1MB
        -c maintenance_work_mem=8MB
        -c effective_cache_size=32MB
        -c max_connections=10
        -c log_min_messages=WARNING
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payments -d payments"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 60MB

  payment-api: &api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payment-api
    environment:
      - DBSERVER=payment-database
      - DBNAME=payments
      - DBUSER=payments
      - DBPASS=paymentspass
      - NATS_SERVER=nats://payment-messaging:4222
      - API_PAYMENT_DEFAULT=http://payment-processor-default:8080/payments
      - API_PAYMENT_FALLBACK=http://payment-processor-fallback:8080/payments
      - NOME_FILA=topico.pagamento1
    ports:
      - 8080:8080
    networks:
      - payment
      - payment-processor
    depends_on:
#      - payment-database
#      - payment-messaging
      payment-database:
        condition: service_healthy
      payment-messaging:
        condition: service_started
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: 0.50
#          memory: 120MB

  payment-api2:
    <<: *api
    container_name: payment-api2
    ports:
      - 8081:8080
